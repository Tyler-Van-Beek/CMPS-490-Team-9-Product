# Generated by Django 5.1.7 on 2025-03-12 21:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('CategoryID', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True, verbose_name='categoryID')),
                ('Name', models.CharField(max_length=200, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('EventID', models.AutoField(primary_key=True, serialize=False, verbose_name='eventID')),
                ('Title', models.CharField(max_length=100, verbose_name='title')),
                ('Description', models.CharField(max_length=100, verbose_name='description')),
                ('Location', models.CharField(max_length=100, verbose_name='location')),
                ('DateTime', models.DateTimeField(null=True, verbose_name='datetime')),
                ('EventStatus', models.BooleanField(default=True, verbose_name='eventstatus')),
                ('CategoryID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.category')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('UserID', models.AutoField(primary_key=True, serialize=False, verbose_name='userID')),
                ('groups', models.ManyToManyField(blank=True, related_name='event_users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='event_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('RegistrationID', models.AutoField(primary_key=True, serialize=False, verbose_name='registrationID')),
                ('RegistrationStatus', models.BooleanField(default=True, verbose_name='registrationstatus')),
                ('RegistrationDate', models.DateTimeField(auto_now_add=True, verbose_name='registrationdate')),
                ('EventID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('UserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.users')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rating', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5)], verbose_name='rating')),
                ('Comments', models.CharField(max_length=500, verbose_name='comments')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('EventID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('UserID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.users')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='OrganizerID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.users'),
        ),
    ]
